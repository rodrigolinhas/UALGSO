#include<stdio.h>
#include<unistd.h>
 
int main()
{
    int i;
     
    printf("I am exec1.c called by execvp() ");
    printf("\n");
     
    return 0;
}
//////////////////////////
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<wait.h>
int main()
{
        //A null terminated array of character 
        //pointers
        pid_t p=fork();
        if (p == 0){
        printf("Current ID: %d, parent ID: %d\n", getpid(), getppid());
        printf("Current ID: %d, parent ID: %d\n", getpid(), getppid());
        char *args[]={"./exec1",NULL};
        execvp(args[0],args);
        printf("Current ID: %d, parent ID: %d\n", getpid(), getppid());
         }
       
     
        /*All statements are ignored after execvp() call as this whole 
        process(execDemo.c) is replaced by another process (EXEC.c)
        */
    return 0;
}
